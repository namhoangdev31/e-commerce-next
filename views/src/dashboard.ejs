<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Admin Dashboard</title>
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css" rel="stylesheet">
    <style>
        body {
            font-family: 'Inter', sans-serif;
            background: #f8f9fa;
        }

        .sidebar {
            height: 100vh;
            background: linear-gradient(180deg, #212529 0%, #343a40 100%);
            padding: 1.5rem;
            position: fixed;
            top: 0;
            left: 0;
            width: 280px;
            color: #fff;
            box-shadow: 2px 0 10px rgba(0,0,0,0.1);
            z-index: 1000;
        }

        .sidebar h3 {
            font-size: 1.5rem;
            font-weight: 600;
            margin-bottom: 2rem;
            padding-bottom: 1rem;
            border-bottom: 1px solid rgba(255,255,255,0.1);
        }

        .sidebar h6 {
            margin-top: 1.5rem;
            font-weight: 600;
            color: #adb5bd;
            text-transform: uppercase;
            font-size: 0.75rem;
            letter-spacing: 0.1em;
            cursor: pointer;
            transition: 0.3s;
        }

        .sidebar h6:hover {
            color: #fff;
        }

        .sidebar a {
            display: flex;
            align-items: center;
            padding: 0.75rem 1rem;
            margin: 0.5rem 0;
            color: #e9ecef;
            text-decoration: none;
            transition: all 0.3s;
            border-radius: 8px;
            font-size: 0.9rem;
        }

        .sidebar a:hover {
            background-color: rgba(255,255,255,0.1);
            color: #fff;
            transform: translateX(5px);
        }

        .sidebar a.active {
            background: linear-gradient(45deg, #0d6efd, #0b5ed7);
            color: #fff;
            box-shadow: 0 4px 15px rgba(13,110,253,0.3);
        }

        .content {
            margin-left: 300px;
            padding: 2rem;
        }

        .header {
            background: #fff;
            padding: 1.5rem;
            margin-bottom: 2rem;
            border-radius: 12px;
            box-shadow: 0 2px 15px rgba(0,0,0,0.05);
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        .stats-card {
            background: #fff;
            padding: 1.5rem;
            border-radius: 12px;
            margin-bottom: 1.5rem;
            box-shadow: 0 2px 15px rgba(0,0,0,0.05);
            transition: transform 0.3s;
        }

        .stats-card:hover {
            transform: translateY(-5px);
        }

        .stats-card h3 {
            font-size: 0.9rem;
            font-weight: 500;
            color: #6c757d;
            margin-bottom: 0.75rem;
        }

        .stats-card h2 {
            font-size: 2rem;
            font-weight: 700;
            color: #212529;
            margin-bottom: 0;
        }

        .card-dashboard {
            background: #fff;
            border-radius: 12px;
            padding: 1.5rem;
            box-shadow: 0 2px 15px rgba(0,0,0,0.05);
            transition: all 0.3s;
            height: 100%;
            display: flex;
            flex-direction: column;
            justify-content: space-between;
        }

        .card-dashboard:hover {
            transform: translateY(-5px);
            box-shadow: 0 8px 25px rgba(0,0,0,0.1);
        }

        .btn-add {
            background: #e9ecef;
            border: none;
            color: #0d6efd;
            width: 3rem;
            height: 3rem;
            border-radius: 10px;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 1.2rem;
            cursor: pointer;
            transition: all 0.3s;
        }

        .btn-add:hover {
            background: linear-gradient(45deg, #0d6efd, #0b5ed7);
            color: #fff;
            box-shadow: 0 4px 15px rgba(13,110,253,0.3);
        }

        .modal-content {
            border-radius: 12px;
            border: none;
            box-shadow: 0 10px 30px rgba(0,0,0,0.1);
        }

        .modal-header {
            background: #f8f9fa;
            border-radius: 12px 12px 0 0;
            border-bottom: 1px solid #dee2e6;
        }

        .form-control {
            border-radius: 8px;
            padding: 0.75rem 1rem;
            border: 1px solid #dee2e6;
            transition: all 0.3s;
        }

        .form-control:focus {
            border-color: #0d6efd;
            box-shadow: 0 0 0 0.25rem rgba(13,110,253,0.25);
        }

        .btn-primary {
            background: linear-gradient(45deg, #0d6efd, #0b5ed7);
            border: none;
            padding: 0.75rem 1.5rem;
            border-radius: 8px;
            font-weight: 500;
            transition: all 0.3s;
        }

        .btn-primary:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 15px rgba(13,110,253,0.3);
        }

        .btn-outline-danger {
            border-radius: 8px;
            padding: 0.75rem 1.5rem;
            font-weight: 500;
            transition: all 0.3s;
        }

        .btn-outline-danger:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 15px rgba(220,53,69,0.3);
        }
    </style>
</head>
<body>

    <div class="sidebar">
        <h3><i class="fas fa-shield-alt me-2"></i>Super Admin</h3>
        <h6 data-bs-toggle="collapse" href="#userManagement">
            User Management <i class="fas fa-chevron-down float-end"></i>
        </h6>
        <div id="userManagement" class="collapse show">
            <a href="#" class="active"><i class="fas fa-users me-2"></i>Users</a>
            <a href="#"><i class="fas fa-user-shield me-2"></i>Roles</a>
            <a href="#"><i class="fas fa-key me-2"></i>Permissions</a>
        </div>

        <h6 data-bs-toggle="collapse" href="#skillManagement">
            Skill Management <i class="fas fa-chevron-down float-end"></i>
        </h6>
        <div id="skillManagement" class="collapse show">
            <a href="#"><i class="fas fa-star me-2"></i>Skills</a>
            <a href="#"><i class="fas fa-layer-group me-2"></i>Categories</a>
            <a href="#"><i class="fas fa-chart-line me-2"></i>Levels</a>
        </div>

        <h6 data-bs-toggle="collapse" href="#settings">
            Settings <i class="fas fa-chevron-down float-end"></i>
        </h6>
        <div id="settings" class="collapse show">
            <a href="/admin/content"><i class="fas fa-cog me-2"></i>General</a>
            <a href="#"><i class="fas fa-shield-alt me-2"></i>Security</a>
            <a href="#" onclick="logout()"><i class="fas fa-sign-out-alt me-2"></i>Logout</a>
        </div>
    </div>

    <div class="content">
        <div class="header">
            <div>
                <h1 class="h3 mb-0">Dashboard Overview</h1>
                <p class="text-muted mb-0">Welcome back, Super Admin</p>
            </div>
            <button class="btn btn-outline-danger" onclick="logout()">
                <i class="fas fa-sign-out-alt me-2"></i>Logout
            </button>
        </div>

        <div class="row mb-4">
            <div class="col-md-3">
                <div class="stats-card">
                    <h3><i class="fas fa-users me-2 text-primary"></i>Total Users</h3>
                    <h2>1,234</h2>
                </div>
            </div>
            <div class="col-md-3">
                <div class="stats-card">
                    <h3><i class="fas fa-user-shield me-2 text-success"></i>Active Roles</h3>
                    <h2>15</h2>
                </div>
            </div>
            <div class="col-md-3">
                <div class="stats-card">
                    <h3><i class="fas fa-star me-2 text-warning"></i>Total Skills</h3>
                    <h2>89</h2>
                </div>
            </div>
            <div class="col-md-3">
                <div class="stats-card">
                    <h3><i class="fas fa-key me-2 text-danger"></i>Permissions</h3>
                    <h2>56</h2>
                </div>
            </div>
        </div>

        <h2 class="h4 mb-4">Quick Actions</h2>
        <div class="row g-4">
            <div class="col-md-3">
                <div class="card-dashboard">
                    <div>
                        <h5 class="mb-3">Create User</h5>
                        <p class="text-muted mb-4">Add new users to the system</p>
                    </div>
                    <button class="btn-add" data-bs-toggle="modal" data-bs-target="#createUserModal">
                        <i class="fas fa-plus"></i>
                    </button>
                </div>
            </div>
            <div class="col-md-3">
                <div class="card-dashboard">
                    <div>
                        <h5 class="mb-3">Add Role</h5>
                        <p class="text-muted mb-4">Create new user roles</p>
                    </div>
                    <button class="btn-add" data-bs-toggle="modal" data-bs-target="#createRoleModal">
                        <i class="fas fa-plus"></i>
                    </button>
                </div>
            </div>
            <div class="col-md-3">
                <div class="card-dashboard">
                    <div>
                        <h5 class="mb-3">Add Skill</h5>
                        <p class="text-muted mb-4">Create new skills</p>
                    </div>
                    <button class="btn-add" data-bs-toggle="modal" data-bs-target="#createSkillModal">
                        <i class="fas fa-plus"></i>
                    </button>
                </div>
            </div>
            <div class="col-md-3">
                <div class="card-dashboard">
                    <div>
                        <h5 class="mb-3">Manage Permissions</h5>
                        <p class="text-muted mb-4">Set up system permissions</p>
                    </div>
                    <button class="btn-add" data-bs-toggle="modal" data-bs-target="#managePermissionsModal">
                        <i class="fas fa-plus"></i>
                    </button>
                </div>
            </div>
        </div>
    </div>

    <!-- Create User Modal -->
    <div class="modal fade" id="createUserModal" tabindex="-1">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Create New User</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    <form id="createUserForm">
                        <div class="mb-3">
                            <label class="form-label">Username</label>
                            <label>
                                <input type="text" class="form-control" name="username" required>
                            </label>
                        </div>
                        <div class="mb-3">
                            <label class="form-label">Email</label>
                            <label>
                                <input type="email" class="form-control" name="email" required>
                            </label>
                        </div>
                        <div class="mb-3">
                            <label class="form-label">Password</label>
                            <label>
                                <input type="password" class="form-control" name="password" required>
                            </label>
                        </div>
                        <div class="mb-3">
                            <label class="form-label">Role</label>
                            <label>
                                <select class="form-control" name="role" required>
                                    <option value="admin">Admin</option>
                                    <option value="user">User</option>
                                </select>
                            </label>
                        </div>
                        <button type="submit" class="btn btn-primary w-100">Create User</button>
                    </form>
                </div>
            </div>
        </div>
    </div>

    <!-- Create Role Modal -->
    <div class="modal fade" id="createRoleModal" tabindex="-1">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Create New Role</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    <form id="createRoleForm">
                        <div class="mb-3">
                            <label class="form-label">Role Name</label>
                            <input type="text" class="form-control" name="roleName" required>
                        </div>
                        <div class="mb-3">
                            <label class="form-label">Description</label>
                            <textarea class="form-control" name="description" rows="3"></textarea>
                        </div>
                        <div class="form-check mb-3">
                            <input class="form-check-input" type="checkbox" name="permissions" value="isSystem">
                            <label class="form-check-label">System</label>
                        </div>
                        <button type="submit" class="btn btn-primary w-100">Create Role</button>
                    </form>
                </div>
            </div>
        </div>
    </div>

    <!-- Create Skill Modal -->
    <div class="modal fade" id="createSkillModal" tabindex="-1">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Create New Skill</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    <form id="createSkillForm">
                        <div class="mb-3">
                            <label class="form-label">Skill Name</label>
                            <input type="text" class="form-control" name="skillName" required>
                        </div>
                        <div class="mb-3">
                            <label class="form-label">Category</label>
                            <select class="form-control" name="category" required>
                                <option value="technical">Technical</option>
                                <option value="soft">Soft Skills</option>
                                <option value="language">Language</option>
                            </select>
                        </div>
                        <div class="mb-3">
                            <label class="form-label">Description</label>
                            <textarea class="form-control" name="description" rows="3"></textarea>
                        </div>
                        <button type="submit" class="btn btn-primary w-100">Create Skill</button>
                    </form>
                </div>
            </div>
        </div>
    </div>

    <!-- Manage Permissions Modal -->
    <div class="modal fade" id="managePermissionsModal" tabindex="-1">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Manage Permissions</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    <form id="createPermissionForm">
                        <div class="mb-3">
                            <label class="form-label">Permission Name</label>
                            <input type="text" class="form-control" name="permissionName" required>
                        </div>
                        <div class="mb-3">
                            <label class="form-label">Module</label>
                            <select class="form-control" name="module" required>
                                <option value="users">Users</option>
                                <option value="roles">Roles</option>
                                <option value="skills">Skills</option>
                            </select>
                        </div>
                        <div class="mb-3">
                            <label class="form-label">Description</label>
                            <textarea class="form-control" name="description" rows="3"></textarea>
                        </div>
                        <button type="submit" class="btn btn-primary w-100">Create Permission</button>
                    </form>
                </div>
            </div>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            try {
                const jwt = localStorage.getItem('jwt');
                if (!jwt) {
                    window.location.href = `/admin/login`;
                }
            } catch (error) {
                console.error('Error checking JWT:', error);
                window.location.href = `/admin/login`;
            }

            // Handle form submissions
            document.getElementById('createUserForm').addEventListener('submit', async (e) => {
                e.preventDefault();
                const formData = new FormData(e.target);
                try {
                    const response = await fetch('/api/users', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                            'Authorization': `Bearer ${localStorage.getItem('jwt')}`
                        },
                        body: JSON.stringify(Object.fromEntries(formData))
                    });
                    if (response.ok) {
                        alert('User created successfully');
                        location.reload();
                    }
                } catch (error) {
                    console.error('Error creating user:', error);
                }
            });

            document.getElementById('createRoleForm').addEventListener('submit', async (e) => {
                e.preventDefault();
                const formData = new FormData(e.target);
                try {
                    const response = await fetch('/api/roles/createRoleBySuperAdmin', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                            'Authorization': `Bearer ${localStorage.getItem('jwt')}`
                        },
                        body: JSON.stringify(Object.fromEntries(formData))
                    });
                    if (response.ok) {
                        alert('Role created successfully');
                        location.reload();
                    }
                } catch (error) {
                    console.error('Error creating role:', error);
                }
            });

            document.getElementById('createSkillForm').addEventListener('submit', async (e) => {
                e.preventDefault();
                const formData = new FormData(e.target);
                try {
                    const response = await fetch('/api/skills', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                            'Authorization': `Bearer ${localStorage.getItem('jwt')}`
                        },
                        body: JSON.stringify(Object.fromEntries(formData))
                    });
                    if (response.ok) {
                        alert('Skill created successfully');
                        location.reload();
                    }
                } catch (error) {
                    console.error('Error creating skill:', error);
                }
            });

            document.getElementById('createPermissionForm').addEventListener('submit', async (e) => {
                e.preventDefault();
                const formData = new FormData(e.target);
                try {
                    const response = await fetch('/api/permissions', {
                        method: 'POST',
                        headers: {
                            'Content-Type': 'application/json',
                            'Authorization': `Bearer ${localStorage.getItem('jwt')}`
                        },
                        body: JSON.stringify(Object.fromEntries(formData))
                    });
                    if (response.ok) {
                        alert('Permission created successfully');
                        location.reload();
                    }
                } catch (error) {
                    console.error('Error creating permission:', error);
                }
            });
        });

        function logout() {
            localStorage.removeItem('jwt');
            window.location.href = `/admin/login`;
        }
    </script>
</body>
</html>
