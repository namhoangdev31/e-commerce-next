<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Role Manager</title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet">
  <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">
  <style>
    body {
      background: #f5f7fb;
      font-family: 'Inter', sans-serif;
      min-height: 100vh;
      padding: 2rem 0;
    }

    .card {
      border: none;
      border-radius: 12px;
      box-shadow: 0 4px 12px rgba(0, 0, 0, 0.05);
      background: #fff;
      margin-bottom: 2rem;
      transition: transform 0.2s;
    }

    .card:hover {
      transform: translateY(-2px);
    }

    .card-header {
      background: #fff;
      border-bottom: 1px solid #edf2f7;
      border-radius: 12px 12px 0 0 !important;
      padding: 1.25rem;
    }

    .card-header h4 {
      color: #2d3748;
      font-size: 1.1rem;
      font-weight: 600;
      margin: 0;
    }

    .card-header i {
      color: #4299e1;
    }

    .btn {
      border-radius: 8px;
      font-weight: 500;
      padding: 0.625rem 1.25rem;
      transition: all 0.2s;
    }

    .btn-primary {
      background: #4299e1;
      border: none;
    }

    .btn-primary:hover {
      background: #3182ce;
      transform: translateY(-1px);
    }

    .btn-light {
      background: #edf2f7;
      color: #4a5568;
      border: none;
    }

    .btn-light:hover {
      background: #e2e8f0;
    }

    .btn-danger {
      background: #fc8181;
      border: none;
    }

    .btn-danger:hover {
      background: #f56565;
    }

    .form-control,
    .form-select {
      border-radius: 8px;
      border: 1px solid #e2e8f0;
      padding: 0.625rem 1rem;
      transition: all 0.2s;
    }

    .form-control:focus,
    .form-select:focus {
      border-color: #4299e1;
      box-shadow: 0 0 0 3px rgba(66, 153, 225, 0.15);
    }

    .table {
      margin: 0;
    }

    .table thead th {
      background: #f7fafc;
      color: #4a5568;
      font-weight: 600;
      border-bottom: 2px solid #edf2f7;
      padding: 1rem;
    }

    .table td {
      padding: 1rem;
      color: #4a5568;
      vertical-align: middle;
    }

    .table tbody tr:hover {
      background-color: #f7fafc;
    }

    .form-check-input:checked {
      background-color: #4299e1;
      border-color: #4299e1;
    }

    .container {
      max-width: 1200px;
      margin: 0 auto;
      padding: 0 1.5rem;
    }

    .form-label {
      color: #4a5568;
      font-weight: 500;
      margin-bottom: 0.5rem;
    }

    .collapse {
      transition: all 0.2s;
    }

    .btn-sm {
      padding: 0.375rem 0.75rem;
      font-size: 0.875rem;
    }

    .form-check-label {
      color: #4a5568;
    }

    .alert {
      border-radius: 8px;
    }

    /* Skeleton Loading Animation */
    @keyframes shimmer {
      0% {
        background-position: -1000px 0;
      }

      100% {
        background-position: 1000px 0;
      }
    }

    .skeleton {
      background: linear-gradient(90deg, #f0f0f0 25%, #e0e0e0 50%, #f0f0f0 75%);
      background-size: 1000px 100%;
      animation: shimmer 2s infinite linear;
      border-radius: 4px;
    }

    .skeleton-text {
      height: 20px;
      margin: 10px 0;
    }

    .skeleton-button {
      height: 35px;
      width: 35px;
      border-radius: 4px;
    }

    .skeleton-select {
      height: 38px;
      border-radius: 8px;
    }

    .skeleton-checkbox {
      height: 24px;
      width: 200px;
      margin: 10px 0;
    }
  </style>
</head>

<body>
  <div class="container">
    <!-- Back Button -->
    <div class="mb-4">
      <a href="/admin/dashboard" class="btn btn-secondary">
        <i class="fas fa-arrow-left me-2"></i>Back to Dashboard
      </a>
    </div>

    <!-- Role Management Section -->
    <div class="card mb-4">
      <div class="card-header d-flex justify-content-between align-items-center">
        <h4 class="mb-0"><i class="fas fa-user-tag me-2"></i>Role Management</h4>
        <button type="button" class="btn btn-light btn-sm" data-bs-toggle="collapse" data-bs-target="#roleFormCollapse">
          <i class="fas fa-plus me-1"></i>New Role
        </button>
      </div>
      <div class="card-body">
        <!-- Role Creation Form -->
        <div class="collapse mb-4" id="roleFormCollapse">
          <form id="roleForm">
            <div class="row g-3">
              <div class="col-md-4">
                <div class="mb-3">
                  <label for="roleCode" class="form-label">Role Code</label>
                  <input type="text" class="form-control" id="roleCode" required placeholder="Enter role code">
                </div>
              </div>
              <div class="col-md-4">
                <div class="mb-3">
                  <label for="roleName" class="form-label">Role Name</label>
                  <input type="text" class="form-control" id="roleName" required placeholder="Enter role name">
                </div>
              </div>
              <div class="col-md-4">
                <div class="mb-3">
                  <label for="roleDescription" class="form-label">Description</label>
                  <input type="text" class="form-control" id="roleDescription" placeholder="Enter description">
                </div>
              </div>
            </div>
            <button type="submit" class="btn btn-primary">Create Role</button>
          </form>
        </div>

        <!-- Roles Table -->
        <div class="table-responsive">
          <table class="table table-hover">
            <thead>
              <tr>
                <th>Role Code</th>
                <th>Role Name</th>
                <th>Description</th>
                <th width="100">Actions</th>
              </tr>
            </thead>
            <tbody id="rolesTableBody">
              <!-- Skeleton Loading for Roles -->
              <tr class="skeleton-row">
                <td>
                  <div class="skeleton skeleton-text"></div>
                </td>
                <td>
                  <div class="skeleton skeleton-text"></div>
                </td>
                <td>
                  <div class="skeleton skeleton-text"></div>
                </td>
                <td>
                  <div class="skeleton skeleton-button"></div>
                </td>
              </tr>
              <tr class="skeleton-row">
                <td>
                  <div class="skeleton skeleton-text"></div>
                </td>
                <td>
                  <div class="skeleton skeleton-text"></div>
                </td>
                <td>
                  <div class="skeleton skeleton-text"></div>
                </td>
                <td>
                  <div class="skeleton skeleton-button"></div>
                </td>
              </tr>
              <tr class="skeleton-row">
                <td>
                  <div class="skeleton skeleton-text"></div>
                </td>
                <td>
                  <div class="skeleton skeleton-text"></div>
                </td>
                <td>
                  <div class="skeleton skeleton-text"></div>
                </td>
                <td>
                  <div class="skeleton skeleton-button"></div>
                </td>
              </tr>
            </tbody>
          </table>
        </div>
      </div>
    </div>

    <!-- Permission Management Section -->
    <div class="card mb-4">
      <div class="card-header d-flex justify-content-between align-items-center">
        <h4 class="mb-0"><i class="fas fa-key me-2"></i>Permission Management</h4>
        <button type="button" class="btn btn-light btn-sm" data-bs-toggle="collapse"
          data-bs-target="#permissionFormCollapse">
          <i class="fas fa-plus me-1"></i>New Permission
        </button>
      </div>
      <div class="card-body">
        <!-- Permission Creation Form -->
        <div class="collapse mb-4" id="permissionFormCollapse">
          <form id="permissionForm">
            <div class="row g-3">
              <div class="col-md-4">
                <div class="mb-3">
                  <label for="permissionName" class="form-label">Permission Name</label>
                  <input type="text" class="form-control" id="permissionName" required
                    placeholder="Enter permission name">
                </div>
              </div>
              <div class="col-md-4">
                <div class="mb-3">
                  <label for="permissionCode" class="form-label">Permission Code</label>
                  <input type="text" class="form-control" id="permissionCode" required
                    placeholder="Enter permission code">
                </div>
              </div>
              <div class="col-md-4">
                <div class="mb-3">
                  <label for="permissionDescription" class="form-label">Description</label>
                  <input type="text" class="form-control" id="permissionDescription" placeholder="Enter description">
                </div>
              </div>
            </div>
            <button type="submit" class="btn btn-primary">Create Permission</button>
          </form>
        </div>

        <!-- Permissions Table -->
        <div class="table-responsive">
          <table class="table table-hover">
            <thead>
              <tr>
                <th>Permission Name</th>
                <th>Permission Code</th>
                <th>Description</th>
                <th width="100">Actions</th>
              </tr>
            </thead>
            <tbody id="permissionsTableBody">
              <!-- Skeleton Loading for Permissions -->
              <tr class="skeleton-row">
                <td>
                  <div class="skeleton skeleton-text"></div>
                </td>
                <td>
                  <div class="skeleton skeleton-text"></div>
                </td>
                <td>
                  <div class="skeleton skeleton-text"></div>
                </td>
                <td>
                  <div class="skeleton skeleton-button"></div>
                </td>
              </tr>
              <tr class="skeleton-row">
                <td>
                  <div class="skeleton skeleton-text"></div>
                </td>
                <td>
                  <div class="skeleton skeleton-text"></div>
                </td>
                <td>
                  <div class="skeleton skeleton-text"></div>
                </td>
                <td>
                  <div class="skeleton skeleton-button"></div>
                </td>
              </tr>
              <tr class="skeleton-row">
                <td>
                  <div class="skeleton skeleton-text"></div>
                </td>
                <td>
                  <div class="skeleton skeleton-text"></div>
                </td>
                <td>
                  <div class="skeleton skeleton-text"></div>
                </td>
                <td>
                  <div class="skeleton skeleton-button"></div>
                </td>
              </tr>
            </tbody>
          </table>
        </div>
      </div>
    </div>

    <!-- Role-Permission Assignment Section -->
    <div class="card">
      <div class="card-header">
        <h4 class="mb-0"><i class="fas fa-link me-2"></i>Role Permissions</h4>
      </div>
      <div class="card-body">
        <form id="assignmentForm">
          <div class="row align-items-end mb-4">
            <div class="col-md-4">
              <label for="roleSelect" class="form-label">Select Role</label>
              <select class="form-select" id="roleSelect" required>
                <option value="" disabled selected>Select a role...</option>
              </select>
            </div>
            <div class="col-md-8">
              <button type="submit" class="btn btn-primary">Save Permissions</button>
            </div>
          </div>

          <div class="mt-4">
            <div id="permissionCheckboxes" class="row row-cols-1 row-cols-md-3 g-3">
              <!-- Permission checkboxes will be dynamically loaded here -->
              <div class="col">
                <div class="skeleton skeleton-checkbox"></div>
              </div>
              <div class="col">
                <div class="skeleton skeleton-checkbox"></div>
              </div>
              <div class="col">
                <div class="skeleton skeleton-checkbox"></div>
              </div>
            </div>
          </div>
        </form>
      </div>
    </div>
  </div>

  <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
  <script>
    // Get JWT token from localStorage
    const token = localStorage.getItem('jwt');

    // Role Management
    document.getElementById('roleForm').addEventListener('submit', async (e) => {
      e.preventDefault();
      const roleData = {
        roleCode: document.getElementById('roleCode').value,
        roleName: document.getElementById('roleName').value,
        description: document.getElementById('roleDescription').value
      };

      try {
        const response = await fetch('/api/roles/createRoleBySuperAdmin', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
            'Authorization': `Bearer ${token}`
          },
          body: JSON.stringify(roleData)
        });
        if (response.ok) {
          Swal.fire({
            icon: 'success',
            title: 'Success!',
            text: 'Role created successfully',
            showConfirmButton: false,
            timer: 1500
          });
          loadRoles();
          document.getElementById('roleForm').reset();
          bootstrap.Collapse.getInstance(document.getElementById('roleFormCollapse')).hide();
        }
      } catch (error) {
        Swal.fire({
          icon: 'error',
          title: 'Error',
          text: 'Failed to create role'
        });
        console.error('Error creating role:', error);
      }
    });

    // Permission Management
    document.getElementById('permissionForm').addEventListener('submit', async (e) => {
      e.preventDefault();
      const permissionData = {
        permissionName: document.getElementById('permissionName').value,
        permissionCode: document.getElementById('permissionCode').value,
        description: document.getElementById('permissionDescription').value
      };

      try {
        const response = await fetch('/api/roles/createPermissionByAdmin', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
            'Authorization': `Bearer ${token}`
          },
          body: JSON.stringify(permissionData)
        });
        if (response.ok) {
          Swal.fire({
            icon: 'success',
            title: 'Success!',
            text: 'Permission created successfully',
            showConfirmButton: false,
            timer: 1500
          });
          loadPermissions();
          document.getElementById('permissionForm').reset();
          bootstrap.Collapse.getInstance(document.getElementById('permissionFormCollapse')).hide();
        }
      } catch (error) {
        Swal.fire({
          icon: 'error',
          title: 'Error',
          text: 'Failed to create permission'
        });
        console.error('Error creating permission:', error);
      }
    });

    // Role-Permission Assignment
    document.getElementById('assignmentForm').addEventListener('submit', async (e) => {
      e.preventDefault();
      const roleId = document.getElementById('roleSelect').value;
      const checkedPermissions = Array.from(document.querySelectorAll('input[name="permissions"]:checked'))
        .map(checkbox => checkbox.value);

      try {
        const response = await fetch('/api/roles/addPermissionForRole', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
            'Authorization': `Bearer ${token}`
          },
          body: JSON.stringify({
            roleId: roleId,
            permissionIds: checkedPermissions
          })
        });
        if (response.ok) {
          Swal.fire({
            icon: 'success',
            title: 'Success!',
            text: 'Permissions updated successfully',
            showConfirmButton: false,
            timer: 1500
          });
        }
      } catch (error) {
        Swal.fire({
          icon: 'error',
          title: 'Error',
          text: 'Failed to update permissions'
        });
        console.error('Error assigning permissions:', error);
      }
    });

    // Load existing roles
    async function loadRoles() {
      try {
        const response = await fetch('/api/roles/getList', {
          headers: {
            'Authorization': `Bearer ${token}`
          }
        });
        const data = await response.json();
        const rolesTableBody = document.getElementById('rolesTableBody');
        rolesTableBody.innerHTML = '';

        data.data.forEach(role => {
          const deleteButton = role.isSystem ? '' : `
        <button class="btn btn-sm btn-danger" onclick="deleteRole(${role.roleCode})">
          <i class="fas fa-trash"></i>
        </button>`;

          rolesTableBody.innerHTML += `
        <tr>
          <td>${role.roleCode}</td>
          <td>${role.roleName}</td>
          <td>${role.description}</td>
          <td>
            ${deleteButton}
          </td>
        </tr>
      `;
        });

        // Update role select dropdown
        const roleSelect = document.getElementById('roleSelect');
        roleSelect.innerHTML = '<option value="" disabled selected>Select a role...</option>';
        data.data.forEach(role => {
          roleSelect.innerHTML += `
        <option value="${role.id}">${role.roleName}</option>
      `;
        });
      } catch (error) {
        console.error('Error loading roles:', error);
        Swal.fire({
          icon: 'error',
          title: 'Error',
          text: 'Failed to load roles'
        });
      }
    }

    // Load existing permissions
    async function loadPermissions() {
      try {
        const response = await fetch('/api/roles/getPermissions', {
          headers: {
            'Content-Type': 'application/json',
            'Authorization': `Bearer ${token}`
          }
        });
        const data = await response.json();
        const permissionsTableBody = document.getElementById('permissionsTableBody');
        const permissionCheckboxes = document.getElementById('permissionCheckboxes');

        permissionsTableBody.innerHTML = '';
        permissionCheckboxes.innerHTML = '';

        data.data.forEach(permission => {
          permissionsTableBody.innerHTML += `
        <tr>
          <td>${permission.permissionName}</td>
          <td>${permission.permissionCode}</td>
          <td>${permission.description}</td>
          <td>
            <button class="btn btn-sm btn-danger" onclick="deletePermission(${permission.permissionCode})">
              <i class="fas fa-trash"></i>
            </button>
          </td>
        </tr>
      `;

          permissionCheckboxes.innerHTML += `
        <div class="col">
          <div class="form-check">
            <input class="form-check-input" type="checkbox" name="permissions" value="${permission.permissionCode}" >
            <label class="form-check-label" for="permission${permission.permissionCode}">
              ${permission.permissionName}
            </label>
          </div>
        </div>
      `;
        });
      } catch (error) {
        console.error('Error loading permissions:', error);
        Swal.fire({
          icon: 'error',
          title: 'Error',
          text: 'Failed to load permissions'
        });
      }
    }

    // Initial load
    loadRoles();
    loadPermissions();

  </script>
</body>

</html>
